/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
pub type openmpt_stream_read_func =
    ::std::option::Option<unsafe extern "C" fn(stream:
                                                   *mut ::std::os::raw::c_void,
                                               dst:
                                                   *mut ::std::os::raw::c_void,
                                               bytes: usize) -> usize>;
pub type openmpt_stream_seek_func =
    ::std::option::Option<unsafe extern "C" fn(stream:
                                                   *mut ::std::os::raw::c_void,
                                               offset: i64,
                                               whence: ::std::os::raw::c_int)
                              -> ::std::os::raw::c_int>;
pub type openmpt_stream_tell_func =
    ::std::option::Option<unsafe extern "C" fn(stream:
                                                   *mut ::std::os::raw::c_void)
                              -> i64>;
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct openmpt_stream_callbacks {
    pub read: openmpt_stream_read_func,
    pub seek: openmpt_stream_seek_func,
    pub tell: openmpt_stream_tell_func,
}
impl ::std::default::Default for openmpt_stream_callbacks {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type openmpt_log_func =
    ::std::option::Option<unsafe extern "C" fn(message:
                                                   *const ::std::os::raw::c_char,
                                               user:
                                                   *mut ::std::os::raw::c_void)>;
pub enum openmpt_module { }
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct openmpt_module_initial_ctl {
    pub ctl: *const ::std::os::raw::c_char,
    pub value: *const ::std::os::raw::c_char,
}
impl ::std::default::Default for openmpt_module_initial_ctl {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}

extern "C" {
    pub fn openmpt_get_library_version() -> u32;
    pub fn openmpt_get_core_version() -> u32;
    pub fn openmpt_free_string(str: *const ::std::os::raw::c_char);
    pub fn openmpt_get_string(key: *const ::std::os::raw::c_char)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_get_supported_extensions()
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_is_extension_supported(extension:
                                              *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn openmpt_log_func_default(message: *const ::std::os::raw::c_char,
                                    user: *mut ::std::os::raw::c_void);
    pub fn openmpt_log_func_silent(message: *const ::std::os::raw::c_char,
                                   user: *mut ::std::os::raw::c_void);
    pub fn openmpt_could_open_propability(stream_callbacks:
                                              openmpt_stream_callbacks,
                                          stream: *mut ::std::os::raw::c_void,
                                          effort: ::std::os::raw::c_double,
                                          logfunc: openmpt_log_func,
                                          user: *mut ::std::os::raw::c_void)
     -> ::std::os::raw::c_double;
    pub fn openmpt_module_create(stream_callbacks: openmpt_stream_callbacks,
                                 stream: *mut ::std::os::raw::c_void,
                                 logfunc: openmpt_log_func,
                                 user: *mut ::std::os::raw::c_void,
                                 ctls: *const openmpt_module_initial_ctl)
     -> *mut openmpt_module;
    pub fn openmpt_module_create_from_memory(filedata:
                                                 *const ::std::os::raw::c_void,
                                             filesize: usize,
                                             logfunc: openmpt_log_func,
                                             user:
                                                 *mut ::std::os::raw::c_void,
                                             ctls:
                                                 *const openmpt_module_initial_ctl)
     -> *mut openmpt_module;
    pub fn openmpt_module_destroy(mod_: *mut openmpt_module);
    pub fn openmpt_module_select_subsong(mod_: *mut openmpt_module,
                                         subsong: i32)
     -> ::std::os::raw::c_int;
    pub fn openmpt_module_set_repeat_count(mod_: *mut openmpt_module,
                                           repeat_count: i32)
     -> ::std::os::raw::c_int;
    pub fn openmpt_module_get_repeat_count(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_duration_seconds(mod_: *mut openmpt_module)
     -> ::std::os::raw::c_double;
    pub fn openmpt_module_set_position_seconds(mod_: *mut openmpt_module,
                                               seconds:
                                                   ::std::os::raw::c_double)
     -> ::std::os::raw::c_double;
    pub fn openmpt_module_get_position_seconds(mod_: *mut openmpt_module)
     -> ::std::os::raw::c_double;
    pub fn openmpt_module_set_position_order_row(mod_: *mut openmpt_module,
                                                 order: i32, row: i32)
     -> ::std::os::raw::c_double;
    pub fn openmpt_module_get_render_param(mod_: *mut openmpt_module,
                                           param: ::std::os::raw::c_int,
                                           value: *mut i32)
     -> ::std::os::raw::c_int;
    pub fn openmpt_module_set_render_param(mod_: *mut openmpt_module,
                                           param: ::std::os::raw::c_int,
                                           value: i32)
     -> ::std::os::raw::c_int;
    pub fn openmpt_module_read_mono(mod_: *mut openmpt_module,
                                    samplerate: i32, count: usize,
                                    mono: *mut i16) -> usize;
    pub fn openmpt_module_read_stereo(mod_: *mut openmpt_module,
                                      samplerate: i32, count: usize,
                                      left: *mut i16, right: *mut i16)
     -> usize;
    pub fn openmpt_module_read_quad(mod_: *mut openmpt_module,
                                    samplerate: i32, count: usize,
                                    left: *mut i16, right: *mut i16,
                                    rear_left: *mut i16,
                                    rear_right: *mut i16) -> usize;
    pub fn openmpt_module_read_float_mono(mod_: *mut openmpt_module,
                                          samplerate: i32, count: usize,
                                          mono: *mut ::std::os::raw::c_float)
     -> usize;
    pub fn openmpt_module_read_float_stereo(mod_: *mut openmpt_module,
                                            samplerate: i32,
                                            count: usize,
                                            left:
                                                *mut ::std::os::raw::c_float,
                                            right:
                                                *mut ::std::os::raw::c_float)
     -> usize;
    pub fn openmpt_module_read_float_quad(mod_: *mut openmpt_module,
                                          samplerate: i32, count: usize,
                                          left: *mut ::std::os::raw::c_float,
                                          right: *mut ::std::os::raw::c_float,
                                          rear_left:
                                              *mut ::std::os::raw::c_float,
                                          rear_right:
                                              *mut ::std::os::raw::c_float)
     -> usize;
    pub fn openmpt_module_read_interleaved_stereo(mod_: *mut openmpt_module,
                                                  samplerate: i32,
                                                  count: usize,
                                                  interleaved_stereo:
                                                      *mut i16) -> usize;
    pub fn openmpt_module_read_interleaved_quad(mod_: *mut openmpt_module,
                                                samplerate: i32,
                                                count: usize,
                                                interleaved_quad:
                                                    *mut i16) -> usize;
    pub fn openmpt_module_read_interleaved_float_stereo(mod_:
                                                            *mut openmpt_module,
                                                        samplerate: i32,
                                                        count: usize,
                                                        interleaved_stereo:
                                                            *mut ::std::os::raw::c_float)
     -> usize;
    pub fn openmpt_module_read_interleaved_float_quad(mod_:
                                                          *mut openmpt_module,
                                                      samplerate: i32,
                                                      count: usize,
                                                      interleaved_quad:
                                                          *mut ::std::os::raw::c_float)
     -> usize;
    pub fn openmpt_module_get_metadata_keys(mod_: *mut openmpt_module)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_get_metadata(mod_: *mut openmpt_module,
                                       key: *const ::std::os::raw::c_char)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_get_current_speed(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_current_tempo(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_current_order(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_current_pattern(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_current_row(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_current_playing_channels(mod_:
                                                           *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_current_channel_vu_mono(mod_:
                                                          *mut openmpt_module,
                                                      channel: i32)
     -> ::std::os::raw::c_float;
    pub fn openmpt_module_get_current_channel_vu_left(mod_:
                                                          *mut openmpt_module,
                                                      channel: i32)
     -> ::std::os::raw::c_float;
    pub fn openmpt_module_get_current_channel_vu_right(mod_:
                                                           *mut openmpt_module,
                                                       channel: i32)
     -> ::std::os::raw::c_float;
    pub fn openmpt_module_get_current_channel_vu_rear_left(mod_:
                                                               *mut openmpt_module,
                                                           channel: i32)
     -> ::std::os::raw::c_float;
    pub fn openmpt_module_get_current_channel_vu_rear_right(mod_:
                                                                *mut openmpt_module,
                                                            channel: i32)
     -> ::std::os::raw::c_float;
    pub fn openmpt_module_get_num_subsongs(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_num_channels(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_num_orders(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_num_patterns(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_num_instruments(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_num_samples(mod_: *mut openmpt_module)
     -> i32;
    pub fn openmpt_module_get_subsong_name(mod_: *mut openmpt_module,
                                           index: i32)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_get_channel_name(mod_: *mut openmpt_module,
                                           index: i32)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_get_order_name(mod_: *mut openmpt_module,
                                         index: i32)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_get_pattern_name(mod_: *mut openmpt_module,
                                           index: i32)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_get_instrument_name(mod_: *mut openmpt_module,
                                              index: i32)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_get_sample_name(mod_: *mut openmpt_module,
                                          index: i32)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_get_order_pattern(mod_: *mut openmpt_module,
                                            order: i32) -> i32;
    pub fn openmpt_module_get_pattern_num_rows(mod_: *mut openmpt_module,
                                               pattern: i32) -> i32;
    pub fn openmpt_module_get_pattern_row_channel_command(mod_:
                                                              *mut openmpt_module,
                                                          pattern: i32,
                                                          row: i32,
                                                          channel: i32,
                                                          command:
                                                              ::std::os::raw::c_int)
     -> u8;
    pub fn openmpt_module_format_pattern_row_channel_command(mod_:
                                                                 *mut openmpt_module,
                                                             pattern: i32,
                                                             row: i32,
                                                             channel: i32,
                                                             command:
                                                                 ::std::os::raw::c_int)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_highlight_pattern_row_channel_command(mod_:
                                                                    *mut openmpt_module,
                                                                pattern:
                                                                    i32,
                                                                row: i32,
                                                                channel:
                                                                    i32,
                                                                command:
                                                                    ::std::os::raw::c_int)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_format_pattern_row_channel(mod_:
                                                         *mut openmpt_module,
                                                     pattern: i32,
                                                     row: i32,
                                                     channel: i32,
                                                     width: usize,
                                                     pad:
                                                         ::std::os::raw::c_int)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_highlight_pattern_row_channel(mod_:
                                                            *mut openmpt_module,
                                                        pattern: i32,
                                                        row: i32,
                                                        channel: i32,
                                                        width: usize,
                                                        pad:
                                                            ::std::os::raw::c_int)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_get_ctls(mod_: *mut openmpt_module)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_ctl_get(mod_: *mut openmpt_module,
                                  ctl: *const ::std::os::raw::c_char)
     -> *const ::std::os::raw::c_char;
    pub fn openmpt_module_ctl_set(mod_: *mut openmpt_module,
                                  ctl: *const ::std::os::raw::c_char,
                                  value: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
}
